{"version":3,"sources":["util/AuthRoute.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/UIReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/TheButton.js","redux/actions/dataActions.js","components/PostScream.js","components/Notifications.js","components/NavBar.js","components/DeleteScream.js","components/Comments.js","components/CommentForm.js","components/LikeButton.js","components/ScreamDialog.js","components/Scream.js","components/EditDetails.js","components/Profile.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/StaticProfile.js","pages/User.js","App.js","serviceWorker.js","index.js","images/clone.png"],"names":["connect","state","authenticated","user","Component","component","rest","render","props","to","initialState","loading","credentials","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","action","type","payload","userHandle","screamId","like","filter","forEach","notification","read","data","index","findIndex","dIndex","splice","comments","UI","store","createStore","composeWithDevTools","applyMiddleware","logOutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuth","token","FBtoken","setItem","children","onClick","buttonClass","tipClass","tip","style","disabled","Tooltip","title","className","placement","IconButton","clearErrors","PostScream","open","body","handleOpen","setState","handleClose","handleChange","event","target","name","value","handleSubmit","preventDefault","trim","toString","postScream","nextProps","this","classes","color","Dialog","onClose","fullWidth","maxWidth","PaperProps","backgroundColor","boxShadow","borderRadius","closeButton","DialogTitle","DialogContent","onSubmit","TextField","label","rows","placeholder","error","helperText","textField","onChange","Button","variant","submitButton","length","CircularProgress","size","ProgressSpinner","newScream","post","response","withStyles","margin","borderBottomColor","position","left","top","Notifications","anchor","handleEntered","unreadNotifications","notif","map","notificationId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","not","Badge","badgeContent","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","marginRight","MenuItem","key","Typography","Link","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","anchorEl","Boolean","onEntered","notificationIds","NavBar","AppBar","background","alignItems","Toolbar","DeleteScream","deleteScream","display","float","delete","Comments","Grid","container","comment","userImg","item","sm","src","alt","image","commentData","format","border","height","objectFit","marginLeft","CommentForm","submitComment","textAlign","commentField","button","marginTop","LikeButton","likeScream","unlikeScream","find","likedScream","mapActionsToProps","ScreamDialog","oldPath","newPath","window","location","pathname","history","pushState","getOneScream","openDialog","likeCount","commentCount","dialogMarkup","loadingContainer","spacing","profileImage","invisibleSeperator","dialogButton","dialogContent","width","overflow","Scream","opened","handleOpenDialog","deleteButton","Card","card","CardMedia","CardContent","content","buttons","WithStyles","marginBottom","minWidth","padding","flexDirection","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","multiline","DialogActions","Profile","handleimageUpload","files","formdata","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","Paper","paper","profile","id","hidden","href","rel","align","paddingLeft","paddingTop","paddingBottom","verticalAlign","cursor","Home","getScreams","recentScreamsMarkup","small","xs","Signup","newUserData","email","password","confirmPass","confirmPassword","handle","signUpUser","form","pageTitle","noValidate","general","customError","message","progress","push","justifyContent","fontSize","Login","userData","loginUser","User","screamIdParam","match","params","screamsMarkup","theme","createMuiTheme","palette","primary","main","secondary","baseURL","FBIdToken","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b629f409.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({component:Component,authenticated, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props)=> authenticated?<Redirect to=\"/\" /> : <Component {...props} />}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import {SET_USER,SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ} from '../types';\r\n\r\nconst initialState = {\r\n    authenticated:false,\r\n    loading: false,\r\n    credentials:{},\r\n    likes:[],\r\n    notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated:true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_SCREAM:\r\n            return{\r\n                ...state,\r\n                likes:[\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.userHandle,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_SCREAM:\r\n            return{\r\n                ...state,\r\n                like: state.likes.filter(like => like.screamId !== action.payload.screamId)\r\n            }\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(notification => notification.read = true);\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM,SET_SCREAM, SUBMIT_COMMENT} from '../types'\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n};\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case UNLIKE_SCREAM:\r\n        case LIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                state.scream = action.payload\r\n            }\r\n            return{\r\n                ...state\r\n            }\r\n        case DELETE_SCREAM:\r\n            let dIndex = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            state.screams.splice(dIndex,1);\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams:[\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            }\r\n        case SET_SCREAM:\r\n            return{\r\n                ...state,\r\n                scream: action.payload\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            return{\r\n                ...state,\r\n                scream:{\r\n                    ...state.scream,\r\n                    comments: [action.payload, ...state.scream.comments]\r\n                }\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n} ","import {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from '../types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        \r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                errors:action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            }\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport UIReducer from './reducers/UIReducer';\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware  = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: UIReducer\r\n})\r\n\r\nconst store = createStore(reducers,\r\n    initialState,\r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware)\r\n    ));\r\n\r\n    \r\nexport default store;","//* User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\r\nexport const SET_USER = 'SET_USER'\r\nexport const LOADING_USER = 'LOADING_USER'\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ'\r\n//* UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS'\r\nexport const LOADING_UI = 'LOADING_UI'\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS' \r\nexport const LOADING_DATA = 'LOADING_DATA'\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\r\n//* Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS'\r\nexport const SET_SCREAM = 'SET_SCREAM'\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM'\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM'\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM'\r\nexport const POST_SCREAM = 'POST_SCREAM'\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import {SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData,history) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/login', userData)\r\n            .then(res => {\r\n                setAuth(res.data.token)\r\n                dispatch(getUserData());\r\n                dispatch({type: CLEAR_ERRORS});\r\n                history.push('/')\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type:SET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n}\r\n\r\nexport const signUpUser = (newUserData,history) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/signup', newUserData)\r\n            .then(res => {\r\n                setAuth(res.data.token)\r\n                dispatch(getUserData());\r\n                dispatch({type: CLEAR_ERRORS});\r\n                history.push('/')\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type:SET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n}\r\n\r\nexport const logOutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['authorization'];\r\n    dispatch({type: SET_UNAUTHENTICATED})\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({type: LOADING_USER})\r\n    axios.get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type:SET_USER,\r\n                payload:res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const uploadImage = (formdata) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    axios.post('/user/image', formdata)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    axios.post('/user',userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => dispatch => {\r\n    axios.post('/notifications', notificationIds)\r\n        .then(res => {\r\n            dispatch({type: MARK_NOTIFICATIONS_READ});\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n\r\nconst setAuth = (token) => {\r\n    const FBtoken = `Bearer ${token}`\r\n    localStorage.setItem('FBIdToken',FBtoken)\r\n    axios.defaults.headers.common['authorization'] = FBtoken\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({children, onClick, buttonClass, tipClass, tip, style, disabled}) => (\r\n    <Tooltip title={tip} className={tipClass} placement=\"top\" style={style}>\r\n        <IconButton onClick={onClick} className={buttonClass}  disabled={disabled}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n);\r\n","import {SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, CLEAR_ERRORS, POST_SCREAM, LOADING_UI, SET_ERRORS, SET_SCREAM,STOP_LOADING_UI, SUBMIT_COMMENT} from '../types'\r\nimport axios from 'axios';\r\n\r\n//* GET SCREAMS\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({type: LOADING_DATA});\r\n    axios.get('/getScreams')\r\n        .then(res =>{\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SET_SCREAMS, payload: []})\r\n        })\r\n}\r\n\r\nexport const getOneScream = (screamId) => (dispatch) => {\r\n    dispatch({type:LOADING_UI});\r\n    axios.get(`/scream/${screamId}`)\r\n        .then(res => {\r\n            dispatch({type: SET_SCREAM, payload: res.data})\r\n            dispatch({type: STOP_LOADING_UI})\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//* Post screams\r\n\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    axios.post('/createScream', newScream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_SCREAM,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n}\r\n\r\n//* LIKE SCREAM\r\n\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    axios.get(`/scream/${screamId}/like`)\r\n        .then(res => {\r\n            dispatch({type:LIKE_SCREAM, payload: res.data});\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\n//* UNLIKE SCREAM\r\n\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n    axios.get(`/scream/${screamId}/unlike`)\r\n        .then(res => {\r\n            dispatch({type:UNLIKE_SCREAM, payload: res.data});\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n    axios.post(`/scream/${screamId}/comment`,commentData)\r\n        .then(res => {\r\n            dispatch({type: SUBMIT_COMMENT, payload: res.data});\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SET_ERRORS, payload: err.response.data})\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`)\r\n        .then(() => {\r\n            dispatch({type: DELETE_SCREAM, payload: screamId})\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({type: CLEAR_ERRORS});\r\n}\r\n\r\nexport const getUserData = (userHandle) => dispatch =>{\r\n    dispatch({type:LOADING_DATA});\r\n    axios.get(`/user/${userHandle}`)\r\n        .then(res => {\r\n            dispatch({type: SET_SCREAMS, payload: res.data.screams});\r\n        })\r\n        .catch(() => {\r\n            dispatch({type: SET_SCREAMS, payload: null})\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../util/TheButton';\r\n//* Redux\r\nimport {connect} from 'react-redux';\r\nimport {postScream} from '../redux/actions/dataActions';\r\n\r\n\r\n//* MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nconst styles = {\r\n    textField:{\r\n        margin:'10px auto 10px auto',\r\n        '& label.Mui-focused': {\r\n          color: '#009688',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n          borderBottomColor: '#009688',\r\n        }\r\n    },\r\n    submitButton:{\r\n        position:'relative',\r\n    },\r\n    ProgressSpinner:{\r\n        position:'absolute'\r\n    },\r\n    closeButton:{\r\n        position:'absolute',\r\n        left:'90%',\r\n        top:'10%'\r\n    }\r\n}\r\n\r\nclass PostScream extends Component {\r\n    state= {\r\n        open:false,\r\n        body: '',\r\n        errors:{}\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors})\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({body: ''});\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open :true})\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open :false, errors:{}})\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const scream= {\r\n            body: this.state.body.trim().toString()\r\n        }\r\n        this.props.postScream(scream);\r\n\r\n    }\r\n    render(){\r\n        const {errors} = this.state;\r\n        const {classes, UI:{loading}} = this.props\r\n        return(\r\n            <div>\r\n                <MyButton tip='create howl' onClick={this.handleOpen}>\r\n                    <AddIcon color='primary'/>\r\n                </MyButton>\r\n                <Dialog \r\n                    open={this.state.open} \r\n                    onClose={this.handleClose} \r\n                    fullWidth \r\n                    maxWidth='sm' \r\n                    PaperProps={{\r\n                        style: {\r\n                          backgroundColor: '#b2bec3',\r\n                          boxShadow: 'none',\r\n                          borderRadius:20\r\n                        },\r\n                      }}>\r\n                    <MyButton tip='close' onClick={this.handleClose} tipClass={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogTitle>Post a new Howl</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField \r\n                                name='body' \r\n                                type='text' \r\n                                label='howl'\r\n                                rows='3' \r\n                                placeholder='your howl' \r\n                                error={errors.body?true:false} \r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                                <Button \r\n                                    type='submit' \r\n                                    variant='contained' \r\n                                    color='primary' \r\n                                    className={classes.submitButton} \r\n                                    disabled={this.state.body.trim().length === 0 || loading}\r\n                                    style={this.state.body.trim().length === 0? {} : {backgroundColor:'#009688',color:'black'}}\r\n                                    >\r\n                                    Submit\r\n                                    {\r\n                                    loading && (\r\n                                        <CircularProgress size='30px' className={classes.ProgressSpinner} style={{color: '#009688'}}/>\r\n                                    )\r\n                                    }\r\n                                </Button>                                \r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: propTypes.func.isRequired,\r\n    UI: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps,{postScream})(withStyles(styles)(PostScream));","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport propTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ToolTip from '@material-ui/core/ToolTip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge'\r\n\r\n//MUI ICONS\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//Redux\r\nimport {connect} from 'react-redux'\r\nimport {markNotificationsRead} from '../redux/actions/userActions';\r\n\r\n\r\n\r\nclass Notifications extends Component{\r\n    state = {\r\n        anchor: null\r\n    }\r\n    handleOpen = (event) => {\r\n        this.setState({anchor: event.target});\r\n    }\r\n    handleClose = () => {\r\n        this.setState({anchor: null})\r\n    }\r\n    handleEntered = () => {\r\n        let unreadNotifications = this.props.notifications.filter(notif => !notif.read).map(notif => notif.notificationId);\r\n        this.props.markNotificationsRead(unreadNotifications);\r\n    }\r\n    render(){\r\n        const {notifications} = this.props;\r\n        const anchor = this.state.anchor;\r\n        dayjs.extend(relativeTime)\r\n\r\n        let notificationsIcon;\r\n\r\n        if(notifications && notifications.length > 0){\r\n            notifications.filter(not => not.read === false).length > 0? (\r\n                notificationsIcon = (\r\n                    <Badge badgeContent={notifications.filter(not => not.read === false).length} color='secondary'>\r\n                        <NotificationsIcon/>\r\n                    </Badge>\r\n                )\r\n            ) : (\r\n                notificationsIcon = <NotificationsIcon/>\r\n            )\r\n            \r\n        }else{\r\n            notificationsIcon = <NotificationsIcon/>\r\n        }\r\n\r\n        let notificationsMarkup = notifications && notifications.length > 0? (\r\n            notifications.map(notif => {\r\n                const verb = notif.type === 'like' ? 'liked' : 'commented on';\r\n                const time = dayjs(notif.createdAt).fromNow();\r\n                const iconColor = notif.read ? '#009688' : 'grey';\r\n                const icon = notif.type === 'like'? (\r\n                    <FavoriteIcon style={{marginRight:10,color:iconColor}}/>\r\n                ) : (\r\n                    <ChatIcon style={{marginRight: 10, color:iconColor}}/>\r\n                )\r\n\r\n                return (\r\n                    <MenuItem key={notif.createdAt} onClick={this.handleClose}>\r\n                        {icon}\r\n                        <Typography component={Link} color='default' variant='body1' to={`/user/${notif.recipient}/scream/${notif.screamId}`}>\r\n                            {notif.sender} {verb} your howl {time}\r\n                        </Typography>\r\n                    </MenuItem>\r\n                )\r\n            })\r\n        ): (\r\n            <MenuItem onClick={this.handleClose}>\r\n                You have no notifications yet\r\n            </MenuItem>\r\n        )\r\n        return (\r\n            <div>\r\n                <ToolTip placement='top' title='notifications'>\r\n                    <IconButton aria-owns={anchor? 'simple menu' : undefined} aria-haspopup='true' onClick={this.handleOpen}>\r\n                        {notificationsIcon}\r\n                    </IconButton>\r\n                </ToolTip>\r\n                <Menu anchorEl={anchor} open={Boolean(anchor)} onClose={this.handleClose} onEntered={this.handleEntered} PaperProps={{\r\n                        style: {\r\n                          backgroundColor: '#b2bec3',\r\n                          boxShadow: 'none',\r\n                          borderRadius:20\r\n                        },\r\n                      }}>\r\n                    {notificationsMarkup}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    markNotificationsRead : propTypes.func.isRequired,\r\n    notifications : propTypes.array.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{markNotificationsRead})(Notifications);","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport MyButton from '../util/TheButton';\r\nimport propTypes from 'prop-types';\r\nimport PostScream from '../components/PostScream';\r\nimport Notifications from './Notifications';\r\n//MUI\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n//\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n//* REDUX\r\nimport {connect} from 'react-redux';\r\nclass NavBar extends Component {\r\n    render() {\r\n        const {authenticated} = this.props\r\n        return (\r\n            // TODO: change the NavBar color\r\n            <AppBar style={{background:'#009688',position:'absolute', alignItems:'center'}}>\r\n                <Toolbar className=\"nav-container\" >\r\n                    {authenticated? (\r\n                        <>\r\n                            <PostScream/>\r\n                           <Link to=\"/\">\r\n                            <MyButton tip=\"home\">\r\n                                <HomeIcon/>\r\n                            </MyButton>\r\n                            </Link>\r\n                            <Notifications />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\r\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">signup</Button>\r\n                        </>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nNavBar.propTypes = {\r\n    authenticated: propTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { Component } from 'react'\r\nimport MyButton from '../util/TheButton';\r\nimport propTypes from 'prop-types';\r\n\r\n//MUI\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {deleteScream} from '../redux/actions/dataActions';\r\n\r\nclass DeleteScream extends Component {\r\n    state= {\r\n        open: false\r\n    };\r\n    handleOpen = () => {\r\n        this.setState({open:true})\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false})\r\n    }\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.setState({open:false})\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{display: 'inline-block', float:'right', position:'absolute', left:'55%'}}>\r\n                    <MyButton tip = 'delete howl' onClick={this.handleOpen}>\r\n                        <DeleteIcon style={{color:'#009688'}}/>\r\n                    </MyButton>\r\n                </div>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\r\n                    <DialogTitle>\r\n                        Are you sure you want to delete this scream?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} >Cancel</Button>\r\n                        <Button onClick={this.deleteScream}>Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: propTypes.func.isRequired,\r\n    screamId: propTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default connect(null,{deleteScream})(DeleteScream);\r\n","import React, { Component, Fragment } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\n//Mui stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = {\r\n    image:{\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData:{\r\n        marginLeft: 20\r\n    }\r\n}\r\nclass Comments extends Component {\r\n    render() {\r\n        const {comments, classes} = this.props\r\n        return (\r\n            <Grid container>\r\n                {comments.map(comment => {\r\n                    const {body, createdAt, userImg, userHandle} = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container >\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImg} alt=\"comment\" className={classes.image}></img>\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography variant='h5' component={Link} to={`/user/${userHandle}`} style={{color:'#009688'}}>\r\n                                                {userHandle}\r\n                                            </Typography>\r\n                                            <Typography variant='body2' color='textSecondary'>\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr  style={{border:'none'}}/>\r\n                                            <Typography variant='body1'> {body}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nComments.propTypes= {\r\n    Comments: propTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments);\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {connect} from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport {submitComment} from '../redux/actions/dataActions';\r\n//MIU\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst styles = {\r\n    button:{\r\n        marginTop: 10\r\n    },\r\n    commentField:{\r\n        '& label.Mui-focused': {\r\n            color: '#009688',\r\n          },\r\n          '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#009688',\r\n          }\r\n    }\r\n}\r\nclass CommentForm extends Component {\r\n    state={\r\n        body:'',\r\n    }\r\n    handleChange = (event)=>{\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    handleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.screamId,{body:this.state.body});\r\n        this.setState({body: ''})\r\n    }\r\n    render() {\r\n        const {classes, authenticated} = this.props\r\n        const commentFormMarkup = authenticated? (\r\n            <Grid item sm={12} style={{textAlign:'center'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField \r\n                        name=\"body\" \r\n                        type=\"text\" \r\n                        label=\"comment on howl\" \r\n                        value={this.state.body} \r\n                        onChange={this.handleChange} \r\n                        className={classes.commentField}\r\n                        fullWidth/>\r\n                        <Button \r\n                            type='submit' \r\n                            variant='contained' \r\n                            style={this.state.body.trim().length === 0? {} : {backgroundColor:'#009688',color:'black'}}\r\n                            className={classes.button} \r\n                            disabled={this.state.body.trim().length === 0}>Submit</Button>\r\n                </form>\r\n                <hr/>\r\n            </Grid>\r\n        ) : null\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: propTypes.func.isRequired,\r\n    UI: propTypes.object.isRequired,\r\n    authenticated: propTypes.bool.isRequired,\r\n    screamId: propTypes.string.isRequired,\r\n    classes: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{submitComment})(withStyles(styles)(CommentForm))\r\n","import React, { Component } from 'react'\r\nimport MyButton from '../util/TheButton';\r\nimport {Link} from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport {connect} from 'react-redux';\r\nimport {likeScream, unlikeScream} from '../redux/actions/dataActions';\r\n\r\n\r\nclass LikeButton extends Component {\r\n    likedScream(){\r\n        if(this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.screamId)) return true;\r\n        else return false;\r\n    }\r\n\r\n    likeScream = () =>{\r\n        this.props.likeScream(this.props.screamId);\r\n    }\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    }\r\n    render() {\r\n        const {user:{authenticated},disabled} = this.props\r\n        const likeButton = !authenticated? (\r\n            <Link to='/login'>\r\n                <MyButton tip ='like'>\r\n                    \r\n                        <FavoriteBorder style={{color:'#009688'}}/>\r\n                </MyButton>\r\n            </Link>\r\n        ) : (\r\n            this.likedScream()? (\r\n                <MyButton tip = 'unlike' onClick={this.unlikeScream} disabled={disabled}>\r\n                    <Favorite style={{color:'#009688'}} />\r\n                </MyButton>\r\n            ): (\r\n                <MyButton tip = 'like' onClick={this.likeScream} disabled={disabled}>\r\n                    <FavoriteBorder style={{color:'#009688'}}/>\r\n                </MyButton>\r\n            )\r\n        );\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: propTypes.object.isRequired,\r\n    screamId:propTypes.string.isRequired,\r\n    likeScream: propTypes.func.isRequired,\r\n    unlikeScream: propTypes.func.isRequired,\r\n    disabled: propTypes.bool\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>({\r\n    user:state.user\r\n})\r\n\r\nconst mapActionsToProps ={\r\n    likeScream,\r\n    unlikeScream\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(LikeButton);\r\n","import React, { Component} from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../util/TheButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n//* Redux\r\nimport {connect} from 'react-redux';\r\nimport {getOneScream} from '../redux/actions/dataActions';\r\n//* MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport LikeButton from './LikeButton';\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\n\r\n// TODO: change styles and colors\r\nconst styles = {\r\n    invisibleSeperator:{\r\n        border:'none',\r\n        margin: 4\r\n    },\r\n    profileImage:{\r\n        width: 200,\r\n        height:200\r\n    },\r\n    loading:{\r\n        marginLeft:170,\r\n        overflow:'auto',\r\n        color: '#009688'\r\n    },\r\n    loadingContainer:{\r\n        overflow:'hidden'\r\n    }\r\n}\r\n\r\nclass ScreamDialog extends Component {\r\n    state ={\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    }\r\n    handleOpen = ()=>{\r\n        let oldPath = window.location.pathname;\r\n\r\n        const {userHandle, screamId} = this.props\r\n        const newPath = `/user/${userHandle}/scream/${screamId}`;\r\n        \r\n        if(oldPath === newPath)\r\n            oldPath = `/user/${userHandle}`;\r\n\r\n        window.history.pushState(null,null,newPath);\r\n\r\n        this.setState({open:true, oldPath, newPath});\r\n        this.props.getOneScream(this.props.screamId);\r\n    }\r\n    handleClose = ()=>{\r\n        window.history.pushState(null,null,this.state.oldPath);\r\n\r\n        this.setState({open:false});\r\n    }\r\n    render() {\r\n        const {classes,\r\n            scream:{screamId, body, createdAt, likeCount, commentCount,userImg, userHandle,comments},\r\n            UI:{loading}\r\n        } = this.props\r\n\r\n        const dialogMarkup = loading? (\r\n            <div className={classes.loadingContainer}>\r\n            <CircularProgress size={200} style={{color:'#009688'}} className={classes.loading}/> \r\n            </div>):(\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={5}>\r\n                    <img src={userImg} alt='profile' className={classes.profileImage}/>\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    <Typography component={Link} style={{color:'#009688'}} variant='h5' to={`/user/${userHandle}`}>\r\n                        {userHandle}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeperator}/>\r\n                    <Typography variant=\"body2\" style={{color:'black'}}>\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeperator}/>\r\n                    <Typography variant='body1'>\r\n                        {body}\r\n                    </Typography>\r\n                    <LikeButton screamId={screamId} disabled={true}/>\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip='comments' disabled={true}>\r\n                            <ChatIcon style={{color:'#009688'}}/>\r\n                        </MyButton>\r\n                    <span>{commentCount} comments</span>\r\n                </Grid>\r\n                <hr/>\r\n                <CommentForm screamId={screamId}/>\r\n                <Comments comments={comments}/>\r\n            </Grid>\r\n        )\r\n        return (\r\n            <div>\r\n                <MyButton tip='comments' style={{marginLeft:40}} onClick={this.handleOpen}>\r\n                            <ChatIcon style={{color:'#009688'}}/>\r\n                </MyButton>\r\n                <MyButton tip='expand this howl' \r\n                    onClick={this.handleOpen} \r\n                    tipClass={classes.dialogButton} \r\n                    style={{position:'absolute', marginLeft:353}}\r\n                >\r\n                    <UnfoldMore style={{color:'#009688'}}/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm' PaperProps={{\r\n                        style: {\r\n                          backgroundColor: '#b2bec3',\r\n                          boxShadow: 'none',\r\n                          borderRadius:20\r\n                        },\r\n                      }}>\r\n                    <MyButton tip='close' onClick={this.handleClose} tipClass={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    getOneScream: propTypes.func.isRequired,\r\n    screamId: propTypes.string.isRequired,\r\n    userHandle: propTypes.string.isRequired,\r\n    scream: propTypes.object.isRequired,\r\n    UI: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    scream: state.data.scream\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getOneScream\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(ScreamDialog));\r\n","import React, { Component } from 'react'\r\nimport WithStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport propTypes from 'prop-types';\r\n\r\nimport DeleteScream from '../components/DeleteScream';\r\nimport {connect} from 'react-redux'\r\n\r\nimport ScreamDialog from './ScreamDialog';\r\n\r\n//* MUI STUFF\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\n//TODO: Change styles\r\nconst styles = {\r\n    card:{\r\n        display: 'flex',\r\n        marginBottom:20,\r\n        width: '80%',\r\n        backgroundColor:'#b2bec3',\r\n        borderRadius:30\r\n    },\r\n    image:{\r\n        minWidth:200\r\n    },\r\n    content:{\r\n        padding:25,\r\n        objectFit:'cover'\r\n    },\r\n    buttons:{\r\n        flexDirection:'row',\r\n        display:'flex'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n    state ={\r\n        opened: false\r\n    }\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({opened: true})\r\n    }\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const {classes,\r\n               scream: {body, createdAt, userImg, userHandle, screamId, likeCount, commentCount},\r\n               user:{authenticated, credentials}} = this.props;\r\n\r\n        \r\n        const deleteButton  = authenticated && userHandle === credentials.userHandle ? (\r\n            <DeleteScream screamId={screamId}/>\r\n        ): null\r\n        //TODO: change the color of the name\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia \r\n                    image={userImg}\r\n                    title=\"Profile Image\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" \r\n                    component={Link} \r\n                    to={`/user/${userHandle}`}\r\n                    style={{color:'#009688'}}\r\n                    >\r\n                        {userHandle}\r\n                    </Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                    <Typography variant=\"body1\">{body}</Typography>\r\n                    <div className={classes.buttons}>\r\n                        <LikeButton screamId={screamId} />\r\n                        <span style={{position:'absolute',marginTop:40}}>{likeCount} likes</span>\r\n                        <span style={{position:'absolute',marginTop:40, marginLeft:70}}>{commentCount} comments</span>\r\n                        <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog}/>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nScream.propTypes = {\r\n    user: propTypes.object.isRequired,\r\n    scream: propTypes.object.isRequired,\r\n    classes: propTypes.object.isRequired,\r\n    openDialog: propTypes.bool\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    user: state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(WithStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../util/TheButton';\r\n//* Redux\r\nimport {connect} from 'react-redux';\r\nimport {editUserDetails} from '../redux/actions/userActions';\r\n\r\n\r\n//* MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = () => ({\r\n    button: {\r\n        float: 'right'\r\n    },\r\n    textField:{\r\n        margin:'10px auto 10px auto',\r\n        '& label.Mui-focused': {\r\n          color: '#009688',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n          borderBottomColor: '#009688',\r\n        },\r\n        width:500\r\n    },\r\n    container:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        width:'40vh',\r\n        alignItems:'center'\r\n    }\r\n})\r\n\r\nclass EditDetails extends Component {\r\n    state ={\r\n        bio:'',\r\n        website:'',\r\n        location:'',\r\n        open:false\r\n    };\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio? credentials.bio : '',\r\n            website: credentials.website? credentials.website : '',\r\n            location: credentials.location? credentials.location : ''\r\n\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        const {credentials} = this.props\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open:true})\r\n        const {credentials} = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleClose= () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        }\r\n\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"edit details\" onClick={this.handleOpen} buttonClass={classes.button}>\r\n                    <EditIcon style={{color:'#009688'}}/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                    PaperProps={{\r\n                        style: {\r\n                          backgroundColor: '#b2bec3',\r\n                          boxShadow: 'none',\r\n                          borderRadius:20\r\n                        },\r\n                      }}\r\n                >\r\n                    <DialogTitle>Edit Your Details</DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container}>\r\n                            <TextField \r\n                                name=\"bio\" \r\n                                type=\"text\" \r\n                                label=\"Bio\" \r\n                                multiline rows=\"3\" \r\n                                placeholder=\"A Short Bio about you\"\r\n                                className={classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                />\r\n                                <TextField \r\n                                name=\"website\" \r\n                                type=\"text\" \r\n                                label=\"Website\"  \r\n                                placeholder=\"Your Website\"\r\n                                className={classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                />\r\n                                <TextField \r\n                                name=\"location\" \r\n                                type=\"text\" \r\n                                label=\"Location\"  \r\n                                placeholder=\"your Location\"\r\n                                className={classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose}>Cancel</Button>\r\n                        <Button onClick={this.handleSubmit}>Save</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: propTypes.func.isRequired,\r\n    classes: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps,{editUserDetails})(withStyles(styles)(EditDetails));\r\n","import React, { Component } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport {logOutUser, uploadImage} from '../redux/actions/userActions';\r\nimport EditDetails from './EditDetails';\r\nimport MyButton from '../util/TheButton';\r\n//* MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//* icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\nconst styles = {\r\n    paper:{\r\n        width: '25%',\r\n        position:'absolute',\r\n        paddingLeft: 10,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        marginTop: 40,\r\n        backgroundColor:'#b2bec3'\r\n    },\r\n    profile:{\r\n        '& .image-wrapper':{\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            '& button':{\r\n                position: 'absolute',\r\n                top: '80%',\r\n                left: '70%'\r\n            }\r\n        },\r\n        '& .profile-image':{\r\n            width: 200,\r\n            height:200,\r\n            objectFit: 'cover',\r\n            maxWidth: '100%',\r\n            borderRadius:'50%'\r\n        },\r\n        '& .profile-details':{\r\n            textAlign: 'center',\r\n            '& span, svg':{\r\n                verticalAlign:'middle'\r\n            },\r\n            '& a':{\r\n                color: 'blue'\r\n            }\r\n        },\r\n        '& hr':{\r\n            border:'none',\r\n            margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button':{\r\n            '&:hover':{\r\n                cursor: 'pointer'\r\n            }\r\n        }\r\n    },\r\n    buttons : {\r\n        textAlign: 'center',\r\n        '& a':{\r\n            margin: '20px 10px'\r\n        }\r\n    }\r\n}\r\n\r\nexport class Profile extends Component {\r\n\r\n    handleimageUpload = (event) => {\r\n        const image = event.target.files[0];\r\n        const formdata = new FormData();\r\n        formdata.append('image',image,image.name);\r\n        this.props.uploadImage(formdata);\r\n    }\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById('image-Input');\r\n        fileInput.click();\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logOutUser();\r\n    }\r\n    render() {\r\n        const {\r\n            classes,\r\n            user: {\r\n                credentials: {userHandle,createdAt,imageUrl,bio,website,location},\r\n                loading,\r\n                authenticated\r\n                }\r\n            } = this.props\r\n\r\n            let profiileMarkup = !loading? (authenticated? (\r\n                <Paper className={classes.paper}>\r\n                    <div className={classes.profile}>\r\n                        <div className='image-wrapper'>\r\n                            <img src ={imageUrl} alt='profile' className='profile-image'/>\r\n                            <input type='file' id=\"image-Input\" onChange={this.handleimageUpload} hidden='hidden'/>\r\n                            <MyButton tip=\"edit profile picture\" onClick={this.handleEditPicture} buttonClass=\"button\">\r\n                                <EditIcon/>\r\n                            </MyButton>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className='profile-details'>\r\n                            <MuiLink component={Link} to={`/user/${userHandle}`} variant='h5' style={{color:'#009688'}}>\r\n                                {userHandle}\r\n                            </MuiLink>\r\n                            <hr/>\r\n                            {bio && <Typography variant=\"body1\">{bio}</Typography>}\r\n                            <hr/>\r\n                            {location && (\r\n                                <>\r\n                                    <LocationOn style={{color:'#009688'}} /> <span>{location}</span>\r\n                                    <hr/>\r\n                                </>\r\n                            )}\r\n                            {website && (\r\n                                <>\r\n                                    <LinkIcon style={{color:'#009688'}}/>\r\n                                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        {'  '}{website}\r\n                                    </a>\r\n                                    <hr/>\r\n                                </>\r\n                            )}\r\n                            <CalendarToday style={{color:'#009688'}}/>\r\n                            {'   '}\r\n                            <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                        </div>\r\n                        <MyButton tip=\"logout\" onClick={this.handleLogout}>\r\n                            <KeyboardReturn style={{color:'#009688'}}/>\r\n                        </MyButton>\r\n                        <EditDetails/>\r\n                    </div>\r\n                </Paper>\r\n            ): (\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"body2\" align=\"center\">\r\n                        No profile Found, please logIn\r\n                    </Typography>\r\n                    <div className={classes.buttons}>\r\n                        <Button variant=\"contained\" component={Link} to=\"/login\" style={{backgroundColor: '#009688'}}>Login</Button>\r\n                        <p>if you dont have an account</p>\r\n                        <Button variant=\"contained\" style={{backgroundColor: '#009688'}} component={Link} to=\"/signup\">Sign Up</Button>\r\n                    </div>\r\n                </Paper>\r\n            )) : (<CircularProgress size={50} style={{position:'absolute', marginTop:200, marginLeft:150,color: '#009688'}} />)\r\n        return profiileMarkup;\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    user: propTypes.object.isRequired,\r\n    classes: propTypes.object.isRequired,\r\n    uploadImage: propTypes.func.isRequired,\r\n    logOutUser: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    uploadImage,\r\n    logOutUser\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Scream from '../components/Scream';\r\nimport Profile from '../components/Profile';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getScreams} from '../redux/actions/dataActions';\r\nimport propTypes from 'prop-types'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        screams: null\r\n    }\r\n    componentDidMount(){\r\n        this.props.getScreams();\r\n    }\r\n    render() {\r\n        const {screams, loading} = this.props.data;\r\n        let recentScreamsMarkup = !loading? (\r\n        screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : (\r\n            <CircularProgress size={50} style={{position:'absolute', color: '#009688'}}/>\r\n        )\r\n        return (\r\n            <Grid container spacing={10}>\r\n                <div style={{display:'inline-block', width:1000}}>\r\n                    <Grid item small={8} xs={12} style={{marginTop:50}}>\r\n                        {recentScreamsMarkup}\r\n                    </Grid>\r\n                </div>\r\n                <div style={{display:'inline-block', marginRight: 80}}>\r\n                    <Grid item small={4} xs={12}>\r\n                        <Profile />\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    getScreams: propTypes.func.isRequired,\r\n    data: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps,{getScreams})(Home);\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport propTypes from 'prop-types';\r\nimport icon from '../images/clone.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//* MUI Stuff\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n//* Redux Imports\r\n\r\nimport {connect } from 'react-redux';\r\nimport {signUpUser} from '../redux/actions/userActions';\r\n\r\nconst styles = {form:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    height: '50vh',\r\n    flexDirection:'column'\r\n  },\r\n  image:{\r\n      margin:'200px auto 20px auto'\r\n  },\r\n  container:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      width:'40vh',\r\n      alignItems:'center'\r\n  },\r\n  pageTitle:{\r\n      margin: '0 auto 40px auto'\r\n  },\r\n  textField:{\r\n      margin:'10px auto 10px auto',\r\n      '& label.Mui-focused': {\r\n        color: '#009688',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#009688',\r\n      }\r\n  },\r\n  button:{\r\n      width:'20vh',\r\n      height:'5vh',\r\n      marginTop:'20px',\r\n      position:'relative',\r\n      background:'#009688',\r\n      '&:hover':{\r\n        background:'#009688'\r\n      }\r\n  },\r\n  customError:{\r\n      color:'red',\r\n      fontSize:'0.8rem'\r\n  },\r\n  progress:{\r\n      position: 'absolute'\r\n  }}\r\n\r\n\r\nclass Signup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            handle:'',\r\n            errors:{}\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors:nextProps.UI.errors\r\n            })\r\n            console.log(nextProps.UI.errors)\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        const newUserData= {\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            confirmPass:this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n        this.props.signUpUser(newUserData, this.props.history);\r\n    }\r\n    render() {\r\n        const {classes, UI: {loading}} = this.props;\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className={classes.form}>\r\n                <img src={icon} alt=\"Icon\" height=\"100\" className={classes.image}/>\r\n                <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                    Sign Up\r\n                </Typography>\r\n                <form noValidate onSubmit={this.handleSubmit} className={classes.container}>\r\n                    <TextField id=\"email\" \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        label=\"Email\" \r\n                        className={classes.textField}\r\n                        value={this.state.email} \r\n                        onChange={this.handleChange}\r\n                        error={errors.email?true:false}\r\n                        helperText={errors.email}\r\n                        fullWidth\r\n                        />\r\n                        <TextField id=\"password\" \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        className={classes.textField}\r\n                        value={this.state.password} \r\n                        onChange={this.handleChange}\r\n                        error={errors.password?true:false}\r\n                        helperText={errors.password}\r\n                        fullWidth\r\n                        />\r\n                        <TextField id=\"confirmPassword\" \r\n                        name=\"confirmPassword\" \r\n                        type=\"password\" \r\n                        label=\"confirmPassword\" \r\n                        className={classes.textField}\r\n                        value={this.state.confirmPassword} \r\n                        onChange={this.handleChange}\r\n                        error={errors.confirmPass?true:false}\r\n                        helperText={errors.confirmPass}\r\n                        fullWidth\r\n                        />\r\n                        <TextField id=\"handle\" \r\n                        name=\"handle\"\r\n                        type=\"text\"\r\n                        label=\"Username\" \r\n                        className={classes.textField}\r\n                        value={this.state.handle} \r\n                        onChange={this.handleChange}\r\n                        error={errors.handle?true:false}\r\n                        helperText={errors.handle}\r\n                        fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body1\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        {errors.error && (\r\n                            <Typography variant=\"body1\" className={classes.customError}>\r\n                                {errors.error.message}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\" \r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={loading}\r\n                        >\r\n                        {loading & (\r\n                            <CircularProgress size={20} className={classes.progress} style={{color: '#009688'}}/>\r\n                        ) || \"Sign Up\"}\r\n                        </Button>\r\n                        <small>Already have an account? <Link to='/login'>Login</Link></small>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSignup.propTypes = {\r\n    classes: propTypes.object.isRequired,\r\n    user: propTypes.object.isRequired,\r\n    UI: propTypes.object.isRequired,\r\n    signUpUser: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {signUpUser})(withStyles(styles)(Signup));\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport propTypes from 'prop-types';\r\nimport icon from '../images/clone.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//* Redux stuff\r\nimport {connect} from 'react-redux';\r\nimport {loginUser} from '../redux/actions/userActions';\r\n//* MUI Stuff\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst styles = {form:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    height: '50vh',\r\n    flexDirection:'column'\r\n  },\r\n  image:{\r\n      margin:'65px auto 20px auto'\r\n  },\r\n  container:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      width:'40vh',\r\n      alignItems:'center'\r\n  },\r\n  pageTitle:{\r\n      margin: '0 auto 40px auto',\r\n  },\r\n  textField:{\r\n      margin:'10px auto 10px auto',\r\n      '& label.Mui-focused': {\r\n        color: '#009688',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#009688',\r\n      }\r\n  },\r\n  button:{\r\n      width:'20vh',\r\n      height:'5vh',\r\n      marginTop:'20px',\r\n      position:'relative',\r\n      background:'#009688',\r\n      '&:hover':{\r\n        background:'#009688'\r\n      }\r\n  },\r\n  customError:{\r\n      color:'red',\r\n      fontSize:'0.8rem'\r\n  },\r\n  progress:{\r\n      position: 'absolute',\r\n      color: '#009688'\r\n  }}\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors:{}\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors:nextProps.UI.errors\r\n            })\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userData= {\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n        this.props.loginUser(userData,this.props.history);\r\n    }\r\n    render() {\r\n        const {classes, UI:{loading}} = this.props;\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className={classes.form}>\r\n                <img src={icon} alt=\"Icon\" height=\"100\" className={classes.image}/>\r\n                <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                    Login\r\n                </Typography>\r\n                <form noValidate onSubmit={this.handleSubmit} className={classes.container}>\r\n                    <TextField id=\"email\" \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        label=\"Email\" \r\n                        className={classes.textField}\r\n                        value={this.state.email} \r\n                        onChange={this.handleChange}\r\n                        error={errors.email?true:false}\r\n                        helperText={errors.email}\r\n                        fullWidth\r\n                        />\r\n                        <TextField id=\"password\" \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        className={classes.textField}\r\n                        value={this.state.password} \r\n                        onChange={this.handleChange}\r\n                        error={errors.password?true:false}\r\n                        helperText={errors.password}\r\n                        fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body1\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\" \r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        disabled={loading}\r\n                        >\r\n                        {loading & (\r\n                            <CircularProgress size={20} className={classes.progress}/>\r\n                        ) || \"Login\"}\r\n                        </Button>\r\n                        <small>If you dont have an account <Link to='/signup'>Sign up</Link></small>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: propTypes.object.isRequired,\r\n    loginUser: propTypes.func.isRequired,\r\n    user : propTypes.object.isRequired,\r\n    UI: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(Login));\r\n","import React from 'react'\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom'\r\n//MUII\r\nimport MuiLink from '@material-ui/core/Link'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = {\r\n    paper:{\r\n        width: '25%',\r\n        position:'absolute',\r\n        paddingLeft: 10,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        marginTop: 40\r\n    },\r\n    profile:{\r\n        '& .image-wrapper':{\r\n            textAlign: 'center',\r\n            position: 'relative'\r\n        },\r\n        '& .profile-image':{\r\n            width: 200,\r\n            height:200,\r\n            objectFit: 'cover',\r\n            maxWidth: '100%',\r\n            borderRadius:'50%'\r\n        },\r\n        '& .profile-details':{\r\n            textAlign: 'center',\r\n            '& span, svg':{\r\n                verticalAlign:'middle'\r\n            },\r\n            '& a':{\r\n                color: 'blue'\r\n            }\r\n        },\r\n        '& hr':{\r\n            border:'none',\r\n            margin: '0 0 10px 0'\r\n        },\r\n    }\r\n}\r\n\r\nconst StaticProfile = (props) => {\r\n    const {classes, profile: {userHandle, createdAt, imageUrl, bio,website,location}} = props;\r\n    return (\r\n        <Paper className={classes.paper}>\r\n                    <div className={classes.profile}>\r\n                        <div className='image-wrapper'>\r\n                            <img src ={imageUrl} alt='profile' className='profile-image'/>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className='profile-details'>\r\n                            <MuiLink component={Link} to={`/user/${userHandle}`} style={{color:'#009688'}} variant='h5'>\r\n                                {userHandle}\r\n                            </MuiLink>\r\n                            <hr/>\r\n                            {bio && <Typography variant=\"body1\">{bio}</Typography>}\r\n                            <hr/>\r\n                            {location && (\r\n                                <>\r\n                                    <LocationOn style={{color:'#009688'}} /> <span>{location}</span>\r\n                                    <hr/>\r\n                                </>\r\n                            )}\r\n                            {website && (\r\n                                <>\r\n                                    <LinkIcon style={{color:'#009688'}}/>\r\n                                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        {'  '}{website}\r\n                                    </a>\r\n                                    <hr/>\r\n                                </>\r\n                            )}\r\n                            <CalendarToday style={{color:'#009688'}}/>\r\n                            {'   '}\r\n                            <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes={\r\n    profile: propTypes.object.isRequired,\r\n    classes: propTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Scream from '../components/Scream';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getUserData} from '../redux/actions/dataActions';\r\nimport StaticProfile from '../components/StaticProfile';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass User extends Component {\r\n    state = {\r\n        screamIdParam: null,\r\n        profile: null\r\n    }\r\n    componentDidMount(){\r\n        const handle = this.props.match.params.handle;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if(screamId){\r\n            this.setState({screamIdParam: screamId})\r\n        }\r\n        this.props.getUserData(handle);\r\n        axios.get(`/user/${handle}`)\r\n            .then(res => {\r\n                this.setState({profile: res.data.user})\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const {data: {screams, loading}} = this.props;\r\n        const {screamIdParam} = this.state;\r\n        const screamsMarkup = loading? (\r\n            <CircularProgress size={50} style={{position:'absolute',color: '#009688'}}/>\r\n        ): screams === null ? (\r\n            <p>No screams from this user</p>\r\n        ) : !screamIdParam? (\r\n            screams.map(scream => <Scream key={scream.screamId} scream={scream}/>)\r\n        ) : (\r\n            screams.map(scream => {\r\n                if(scream.screamId !== screamIdParam){\r\n                    return <Scream key={scream.screamId} scream={scream}/>\r\n                }else{\r\n                    return <Scream key={scream.screamId} scream={scream} openDialog/>\r\n                }\r\n            })\r\n        )\r\n        return (\r\n            <Grid container spacing={10}>\r\n                <div style={{display:'inline-block', width:1000}}>\r\n                    <Grid item small={8} xs={12}>\r\n                        <p>Howls</p>\r\n                        {screamsMarkup}\r\n                    </Grid>\r\n                </div>\r\n                <div style={{display:'inline-block', marginRight: 80}}>\r\n                    <Grid item small={4} xs={12}>\r\n                        {this.state.profile === null? (\r\n                            <CircularProgress size={50} style={{position:'absolute', marginTop:100, marginLeft:150, color: '#009688'}}/>\r\n                        ): (\r\n                            <StaticProfile profile={this.state.profile}/>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    data: propTypes.object.isRequired,\r\n    getUserData: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps,{getUserData})(User);\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport AuthRoute from './util/AuthRoute';\nimport axios from 'axios';\n\nimport jwtDecode from 'jwt-decode';\n\n//* redux components\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\nimport {SET_AUTHENTICATED} from './redux/types'\nimport {logOutUser, getUserData} from './redux/actions/userActions';\n//* Only Components imports\nimport NavBar from './components/NavBar'\n\n//* Only Page imports\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport User from './pages/User';\n//TODO: Change the color with hanin\nconst theme = createMuiTheme({\n  palette:{\n    primary:{\n      main: '#84ffff'\n    },\n    secondary:{\n      main:'#fafafa'\n    }\n  }\n})\n\naxios.defaults.baseURL = 'https://europe-west1-socialclone-6e722.cloudfunctions.net/api';\n\nconst token = localStorage.FBIdToken;\nif(token){\n const decodedToken = jwtDecode(token);\n if(decodedToken.exp*1000 < Date.now()){\n   store.dispatch(logOutUser());\n   window.location.href = '/login';\n }else {\n   store.dispatch({ type: SET_AUTHENTICATED});\n   axios.defaults.headers.common['authorization'] = token;\n   store.dispatch(getUserData());\n }\n}\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n          <Router>\n            <NavBar />\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path ='/' component={Home} />\n                  <AuthRoute exact path ='/login' component={Login} />\n                  <AuthRoute exact path ='/signup' component={Signup} />\n                  <Route exact path=\"/user/:handle\" component={User} />\n                  <Route exact path=\"/user/:handle/scream/:screamId\" component={User}/>\n                </Switch>\n              </div>\n          </Router>\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clone.3e918a24.png\";"],"sourceRoot":""}